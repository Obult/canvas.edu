// Prisma schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Access {
  PRIVATE
  PROTECTED
  PUBLIC
}

model User {
  id        Int     @default(autoincrement()) @id
  intraId   Int     @unique
  name      String
  status    String?
  hashedpw  String?
  friends   Int[]
  blocked   Int[]
  elo       Int     @default(500)
  rooms     Room[]
  owns      Room[]  @relation("owns")
  sendMsg   Msg[]
  games     Game[]
}

model Room {
  id          Int @default(autoincrement()) @id
  owner       User? @relation("owns", fields: [ownerId], references: [id])
  ownerId     Int?
  users       User[]
  hashedCode  String?
  access      Access @default(PUBLIC)
  messages    Msg[]
  lastId      Int
}

model Msg {
  @@id([id, roomId]) //Dit wil ik graag uitgelegd krijgen <3 // Zodat we kunnen lazy loaden, id is samengevoegd id en roomid, op zichzelf zijn deze hier niet uniek
  id        Int  // has to be set to last Id of Room + 1 and also increase the room->lastId by 1
  room      Room @relation(fields: [roomId], references: [id])
  roomId    Int
  body      String
  author    User @relation(fields: [authorId], references: [id])
  authorId  Int
  invite    Boolean
}

model Game  {
  id        Int @default(autoincrement()) @id
  players   User[]
  score     Int[]
}
